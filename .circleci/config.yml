---
version: 2
jobs:
  integration:
    machine: true
    steps:
      - checkout
      - run:
          name: Build the application image
          command: make build
      - run:
          name: Install application dependencies
          command: make install-dependencies
      - run:
          name: Run the application
          command: make up
      - run:
          name: Run integration tests
          command: make integration-tests

  unit:
    machine: true
    steps:
      - checkout
      - run:
          name: Build the application image
          command: make build
      - run:
          name: Install application development dependencies
          command: make install-dev-dependencies
      - run:
          name: Run the application
          command: make up
      - run:
          name: Run unit tests
          command: make unit-tests

  deploy-staging:
    docker:
      - image: 18fgsa/cloud-foundry-cli
        environment:
          CF_API: https://api.fr.cloud.gov
    steps:
      - checkout
      - deploy:
          name: Push to Cloud Foundry
          command: cf_deploy.sh dashboard gsa-datagov staging

  deploy-production:
    docker:
      - image: 18fgsa/cloud-foundry-cli
        environment:
          CF_API: https://api.fr.cloud.gov
    steps:
      - checkout
      - deploy:
          name: Push to Cloud Foundry
          command: cf_deploy.sh dashboard gsa-datagov prod

  deploy-sandbox:
    docker:
      - image: circleci/python:3.6
    environment:
      JENKINS_URL: https://ci.sandbox.datagov.us
    steps:
      - checkout
      - deploy:
          name: jenkins
          command: bin/jenkins_build deploy-ci-app-dashboard

  run-crawls:
    docker:
      - image: 18fgsa/cloud-foundry-cli
        environment:
          CF_API: https://api.fr.cloud.gov
    steps:
      - run:
          name: Login and target a CF space
          command: |
            cf api "$CF_API"
            cf auth "$CF_DEPLOY_USER" "$CF_DEPLOY_PASSWORD"
            cf target -o gsa-datagov -s staging
      - run:
          name: Download data.json files
          command: cf run-task dashboard "php php/bin/composer.phar crawl-download" -m 64M --name crawl-download
      - run:
          name: Scan the content of data.json files
          command: cf run-task dashboard "php php/bin/composer.phar crawl-full-scan" -m 64M --name crawl-full-scan


workflows:
  version: 2
  commit:
    jobs:
      - integration
      - unit
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - integration
            - unit
      - deploy-sandbox:
          requires:
            - integration
            - unit
          filters:
            branches:
              only: master
      - deploy-production:
          requires:
            - integration
            - unit
            - deploy-staging
          filters:
            branches:
              only: main
  nightly:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - run-crawls
